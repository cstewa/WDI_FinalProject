%h1 
  This is the static_pages

Bearing: 
%span#bearing
%br
%span#latitude
%br
%span#longitude
#br
%span#orientation
%br
Percent: 
%span#percent

%br
%span#in_cond

%br
#canvas
  .box{"data-bearing"=>"191"}
  .box{"data-bearing"=>"10", style:"background: green"}
  .box{"data-bearing"=>"350", style:"background: blue"}

:css
  #canvas {
    border: 1px solid black;
    height: 250px;
    margin: 10px;
    background: gray;
    position: relative;
  }

  .box{
    width: 200px;
    height: 100%;
    background-color: red;
    background-image: url('http://frankywahl.com/Images/Franky.png');
    background-size: cover;
    top: 0%;
    left: 30%;
    position: absolute;
  }


:javascript
  $(document).ready(function(){

    // Get orientation and position form start
    inform_orientation();
    get_position();

    window.addEventListener('orientationchange', inform_orientation);
    
    // This appends orientation
    function inform_orientation(){
      $('#orientation').text(window.orientation);
    }

    // This informs on bearing (based on compass)
    window.addEventListener('deviceorientation', function(e) {
      if (e.webkitCompassHeading != 0){
        bearing = e.webkitCompassHeading
        $('#bearing').text(bearing);

        // Focal Length is camera and orientation dependent
        lens_angle = ($('#orientation').text() == 0) ? 42 : 62 // Get the focal length               

        boxes = $('.box');
        
        // Loop over each box
        for (var i = 0; i < boxes.length; ++i){
          var current_box = $(boxes[i])
          var box_bearing = current_box.data("bearing");

          if (Math.abs(box_bearing - bearing) < (lens_angle / 2) || (360 - Math.abs(box_bearing - bearing) ) < (lens_angle / 2)){
            current_box.css("display", "");

            position_from_left = 100 * (bearing - (box_bearing - (lens_angle / 2) )) / lens_angle 

            //$('#in_cond').text("False");

            if (!(Math.abs(box_bearing - bearing) < (lens_angle/2))){
              // Where we have to overwrit
              var constant = lens_angle / 2 + box_bearing - bearing;
              var value = 0;
              if (box_bearing < 180){
                value  = constant - 360;
              } else { 
                value  = constant + 360;
              }

              position_from_left = 100 * value / lens_angle;
              
            }

            //Compensate for 360 mod
            //else if (box_bearing > 360 - focoal_length && bearing < lens_angle / 2) { 
            //}
            // End of 360 mod calculations
            
            current_box.css("left", 100-position_from_left.toString() + "%");
            $('#percent').text(100-position_from_left.toString())

          } else {
            current_box.css("display", "none");
          }

        }


      }
    }, false);
    
    

    // Get HTML5 Geolocation information
    function get_position(event){
      // Try HTML5 geolocation
      if(navigator.geolocation) {
        console.log(navigator.geolocation)
        navigator.geolocation.getCurrentPosition(show_pos, show_error);
      } else {
        alert("Sorry, your browser does not suport GeoLocation");
      }
    }

    // This will get latitude and longitude
    function show_pos(position) {
      var latitude = position.coords.latitude
      var longitude = position.coords.longitude
      $('#latitude').text(latitude);
      $('#longitude').text(longitude);
    };

    function show_error(){};

  });
